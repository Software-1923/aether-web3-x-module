// atlas-app-services-admin.service.ts
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { AtlasAppServicesClient } from './';
class ConsoleLogger {
    log(message, ...optionalParams) {
        console.log(`**** ConsoleLogger-LOG: ${message}`, ...optionalParams);
    }
    error(message, ...optionalParams) {
        console.error(`**** ConsoleLogger-ERROR: ${message}`, ...optionalParams);
    }
    debug(message, ...optionalParams) {
        console.debug(`**** ConsoleLogger-DEBUG: ${message}`, ...optionalParams);
    }
}
const logger = new ConsoleLogger();
function testThis() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const config = {
                publicKey: 'eyujkmpo',
                privateKey: '42dd7e8f-6c15-4760-855e-6cbef0383472',
                baseUrl: 'https://realm.mongodb.com/api/admin/v3.0',
                groupId: '5fe22a5cda47a738e60cafe7',
            };
            const client = new AtlasAppServicesClient(config, logger);
            yield client.initialize();
            const appsApi = yield client.atlasAppsApi();
            const appsList = yield appsApi.adminListApplications(client.groupId, "atlas");
            console.log("appsList: ", appsList);
        }
        catch (error) {
            console.error("error: ", error);
        }
    });
}
//run testThis()
console.log("starting");
testThis();
console.log("done");
